{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationEvents } from \"react-navigation\";\nimport { ListItem } from \"react-native-elements\";\nimport RecipeDetails from \"../components/RecipeDetails\";\n\nvar RecipeList = function RecipeList(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedRecipe = _useState2[0],\n      setSelectedRecipe = _useState2[1];\n\n  var recipes = [{\n    _id: 1,\n    name: 'Chicken Curry'\n  }, {\n    _id: 2,\n    name: 'Beef Curry'\n  }];\n  useEffect(function () {\n    console.log(\"selectedRecipe: \", selectedRecipe);\n  }, [selectedRecipe]);\n  return React.createElement(React.Fragment, null, React.createElement(Modal, {\n    animationType: \"slide\",\n    visible: selectedRecipe != \"\",\n    onRequestClose: function onRequestClose() {\n      setSelectedRecipe(\"\");\n    }\n  }, React.createElement(View, null, React.createElement(Text, null, \"Test\")), React.createElement(RecipeDetails, {\n    recipeId: selectedRecipe\n  })), React.createElement(FlatList, {\n    data: recipes,\n    keyExtractor: function keyExtractor(item) {\n      return item._id;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return setSelectedRecipe(\"6184781d533568e45cdbc19c\");\n        }\n      }, React.createElement(ListItem, null, React.createElement(ListItem.Content, null, React.createElement(ListItem.Title, null, item.name)), React.createElement(ListItem.Chevron, null)));\n    }\n  }));\n};\n\nRecipeList.navigationOptions = {\n  title: \"Recipes\"\n};\nvar styles = StyleSheet.create({});\nexport default RecipeList;","map":{"version":3,"sources":["C:/Users/benwa/Documents/School/Centennial/Semester 6/COMP313/GroceryApp/src/screens/RecipeList.js"],"names":["React","useContext","useEffect","useState","NavigationEvents","ListItem","RecipeDetails","RecipeList","navigation","selectedRecipe","setSelectedRecipe","recipes","_id","name","console","log","item","navigationOptions","title","styles","StyleSheet","create"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;;;;;;;AAEA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,OAAOC,aAAP;;AAGA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAErC,kBAA4CL,QAAQ,CAAC,EAAD,CAApD;AAAA;AAAA,MAAOM,cAAP;AAAA,MAAuBC,iBAAvB;;AAEA,MAAIC,OAAO,GAAE,CACT;AAACC,IAAAA,GAAG,EAAG,CAAP;AAAYC,IAAAA,IAAI,EAAE;AAAlB,GADS,EAET;AAACD,IAAAA,GAAG,EAAG,CAAP;AAAYC,IAAAA,IAAI,EAAE;AAAlB,GAFS,CAAb;AAKAX,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCN,cAAhC;AACD,GAFQ,EAEN,CAACA,cAAD,CAFM,CAAT;AAIA,SACE,0CACA,oBAAC,KAAD;AACI,IAAA,aAAa,EAAC,OADlB;AAGI,IAAA,OAAO,EAAEA,cAAc,IAAI,EAH/B;AAII,IAAA,cAAc,EAAE,0BAAM;AACpBC,MAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACD;AANL,KAQI,oBAAC,IAAD,QACE,oBAAC,IAAD,eADF,CARJ,EAaI,oBAAC,aAAD;AAAe,IAAA,QAAQ,EAAED;AAAzB,IAbJ,CADA,EAiBE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEE,OADR;AAEE,IAAA,YAAY,EAAE,sBAACK,IAAD;AAAA,aAAUA,IAAI,CAACJ,GAAf;AAAA,KAFhB;AAGE,IAAA,UAAU,EAAE,2BAAc;AAAA,UAAXI,IAAW,SAAXA,IAAW;AACxB,aACE,oBAAC,gBAAD;AACE,QAAA,OAAO,EAAE;AAAA,iBAGPN,iBAAiB,CAAC,0BAAD,CAHV;AAAA;AADX,SAOE,oBAAC,QAAD,QACE,oBAAC,QAAD,CAAU,OAAV,QACE,oBAAC,QAAD,CAAU,KAAV,QAAiBM,IAAI,CAACH,IAAtB,CADF,CADF,EAIE,oBAAC,QAAD,CAAU,OAAV,OAJF,CAPF,CADF;AAgBD;AApBH,IAjBF,CADF;AA0CD,CAvDD;;AAyDAN,UAAU,CAACU,iBAAX,GAA+B;AAC7BC,EAAAA,KAAK,EAAE;AADsB,CAA/B;AAIA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf;AAEA,eAAed,UAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { StyleSheet, Text, FlatList, TouchableOpacity, Modal, View } from \"react-native\";\r\nimport { NavigationEvents } from \"react-navigation\";\r\nimport { ListItem } from \"react-native-elements\";\r\nimport RecipeDetails from \"../components/RecipeDetails\";\r\n//import { Context as TrackContext } from \"../context/TrackContext\";\r\n\r\nconst RecipeList = ({ navigation }) => {\r\n  //const { state, fetchTracks } = useContext(TrackContext);\r\n  const [selectedRecipe, setSelectedRecipe] = useState(\"\");\r\n\r\n  let recipes =[\r\n      {_id : 1 ,  name: 'Chicken Curry'},\r\n      {_id : 2 ,  name: 'Beef Curry'},\r\n  ]\r\n\r\n  useEffect(() => {\r\n    console.log(\"selectedRecipe: \", selectedRecipe);\r\n  }, [selectedRecipe])\r\n\r\n  return (\r\n    <>\r\n    <Modal\r\n        animationType=\"slide\"\r\n        // transparent={true}\r\n        visible={selectedRecipe != \"\"}\r\n        onRequestClose={() => {\r\n          setSelectedRecipe(\"\");\r\n        }}\r\n      >\r\n        <View>\r\n          <Text>\r\n            Test\r\n          </Text>\r\n        </View>\r\n        <RecipeDetails recipeId={selectedRecipe} />\r\n      </Modal>\r\n      {/* <NavigationEvents onWillFocus={fetchTracks} /> */}\r\n      <FlatList\r\n        data={recipes}\r\n        keyExtractor={(item) => item._id}\r\n        renderItem={({ item }) => {\r\n          return (\r\n            <TouchableOpacity\r\n              onPress={() =>\r\n                //navigation.navigate(\"TrackDetail\", { _id: item._id })\r\n                // console.log('button pressed'),\r\n                setSelectedRecipe(\"6184781d533568e45cdbc19c\")\r\n              }\r\n            >\r\n              <ListItem>\r\n                <ListItem.Content>\r\n                  <ListItem.Title>{item.name}</ListItem.Title>\r\n                </ListItem.Content>\r\n                <ListItem.Chevron />\r\n              </ListItem>\r\n            </TouchableOpacity>\r\n          );\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nRecipeList.navigationOptions = {\r\n  title: \"Recipes\",\r\n};\r\n\r\nconst styles = StyleSheet.create({});\r\n\r\nexport default RecipeList;\r\n"]},"metadata":{},"sourceType":"module"}