{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { NavigationEvents } from 'react-navigation';\nimport NavLink from \"../components/NavLink\";\nimport Api from \"../api/apiInstance\";\nimport * as SecureStore from 'expo-secure-store';\nimport { Card, Image, ListItem, Button, Icon } from 'react-native-elements';\nimport { ButtonGroup } from 'react-native-elements/dist/buttons/ButtonGroup';\nimport { navigate } from \"../navigationRef\";\nimport Spacer from \"../components/Spacer\";\n\nfunction RecipeDetails(recipeId) {\n  var token = SecureStore.getItemAsync(\"accessToken\");\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      description = _useState2[0],\n      setDescription = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      price = _useState4[0],\n      setPrice = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name = _useState6[0],\n      setName = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      ingredients = _useState8[0],\n      setIngredients = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      imageUrl = _useState10[0],\n      setImageUrl = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      recipeItems = _useState12[0],\n      setRecipeItems = _useState12[1];\n\n  useEffect(function () {\n    Api().get('recipes/?recipeId=' + recipeId, {\n      headers: {\n        authorization: \"Bearer \" + token,\n        accept: \"application/json\"\n      }\n    }).then(function (response) {\n      console.log(\"response.data: \", response.data);\n      setName(response.data.recipe.recipeName);\n      setImageUrl(response.data.recipe.recipePhoto);\n      setDescription(response.data.recipe.description);\n      setPrice(response.data.recipe.price);\n      setIngredients(response.data.ingredients);\n      setRecipeItems(response.data.recipe.recipeItem);\n    }).catch(function (e) {});\n  }, []);\n  return React.createElement(ImageBackground, {\n    source: require(\"../../assets/images/lightBackground2.jpg\"),\n    resizeMode: \"cover\",\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.cardContainer\n  }, React.createElement(Text, {\n    style: styles.header\n  }, name), React.createElement(Card.Divider, null), React.createElement(View, {\n    style: {\n      alignItems: \"center\"\n    }\n  }, React.createElement(Image, {\n    style: styles.recipeImage,\n    resizeMode: \"contain\",\n    source: {\n      uri: imageUrl\n    }\n  }), React.createElement(Text, {\n    style: styles.text\n  }, \"\\n\", description, \"\\n\"), recipeItems.map(function (recipeItem, index) {\n    var ingredient = ingredients.find(function (ingredient) {\n      return ingredient._id === recipeItem.ingredients;\n    });\n    return React.createElement(Text, {\n      key: index,\n      style: styles.text\n    }, recipeItem.itemQuantity, \" \", ingredient == null ? void 0 : ingredient.unitType, \" \", ingredient == null ? void 0 : ingredient.name);\n  })), React.createElement(Spacer, null), React.createElement(View, null, React.createElement(Button, {\n    onPress: function onPress() {\n      return navigate(\"RecipeList\");\n    },\n    title: \"Edit\"\n  }), React.createElement(Spacer, null), React.createElement(Button, {\n    onPress: function onPress() {\n      return navigate(\"RecipeList\");\n    },\n    title: \"Close\"\n  }))));\n}\n\n;\nRecipeDetails.navigationOptions = {\n  header: function header() {\n    return false;\n  }\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: \"center\"\n  },\n  cardContainer: {\n    width: \"90%\",\n    backgroundColor: 'lightgrey',\n    borderRadius: 10,\n    alignItems: \"center\"\n  },\n  recipeImage: {\n    height: 160,\n    width: 400,\n    alignSelf: 'center'\n  },\n  text: {\n    fontSize: 16,\n    textAlign: \"center\",\n    color: \"#404040\"\n  },\n  header: {\n    fontSize: 24,\n    textAlign: \"center\",\n    color: \"#404040\"\n  }\n});\nexport default RecipeDetails;","map":{"version":3,"sources":["C:/Users/benwa/Documents/School/Centennial/Semester 6/COMP313/GroceryApp/src/screens/RecipeDetails.js"],"names":["React","useContext","useEffect","useState","NavigationEvents","NavLink","Api","SecureStore","Card","Image","ListItem","Button","Icon","ButtonGroup","navigate","Spacer","RecipeDetails","recipeId","token","getItemAsync","description","setDescription","price","setPrice","name","setName","ingredients","setIngredients","imageUrl","setImageUrl","recipeItems","setRecipeItems","get","headers","authorization","accept","then","response","console","log","data","recipe","recipeName","recipePhoto","recipeItem","catch","e","require","styles","container","cardContainer","header","alignItems","recipeImage","uri","text","map","index","ingredient","find","_id","itemQuantity","unitType","navigationOptions","StyleSheet","create","flex","justifyContent","width","backgroundColor","borderRadius","height","alignSelf","fontSize","textAlign","color"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { View, StyleSheet, Text, ImageBackground, Modal } from 'react-native';\r\nimport { NavigationEvents } from 'react-navigation';\r\nimport NavLink from '../components/NavLink';\r\nimport Api from '../api/apiInstance';\r\nimport * as SecureStore from 'expo-secure-store';\r\nimport { Card, Image, ListItem, Button, Icon } from 'react-native-elements'\r\nimport { ButtonGroup } from 'react-native-elements/dist/buttons/ButtonGroup';\r\nimport { navigate } from '../navigationRef';\r\nimport Spacer from '../components/Spacer';\r\n\r\nfunction RecipeDetails(recipeId) {\r\n    const token = SecureStore.getItemAsync(\"accessToken\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [price, setPrice] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [ingredients, setIngredients] = useState([]);\r\n    const [imageUrl, setImageUrl] = useState(null);\r\n    const [recipeItems, setRecipeItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n    Api()\r\n    .get(\r\n        'recipes/?recipeId=' + recipeId,\r\n        {\r\n            headers: {\r\n                authorization: \"Bearer \" + token,\r\n                accept: \"application/json\"\r\n            },\r\n        }\r\n    )\r\n    .then((response) => {\r\n        console.log(\"response.data: \", response.data);\r\n        setName(response.data.recipe.recipeName);\r\n        setImageUrl(response.data.recipe.recipePhoto);\r\n        setDescription(response.data.recipe.description);\r\n        setPrice(response.data.recipe.price);\r\n        setIngredients(response.data.ingredients);\r\n        setRecipeItems(response.data.recipe.recipeItem);\r\n    })\r\n    .catch((e) => {\r\n        \r\n    });\r\n    }, [])\r\n\r\n  return (\r\n    <ImageBackground\r\n        source={require('../../assets/images/lightBackground2.jpg')}\r\n        resizeMode=\"cover\"\r\n        style={styles.container}\r\n    >\r\n        <View\r\n            // wrapperStyle={styles.card} \r\n            style={styles.cardContainer}\r\n        >\r\n            <Text style={styles.header}>{name}</Text>\r\n            <Card.Divider/>\r\n                <View style={{alignItems: \"center\"}}>\r\n                <Image\r\n                    style={styles.recipeImage}\r\n                    resizeMode=\"contain\"\r\n                    source={{uri: imageUrl}}\r\n                />\r\n                <Text style={styles.text}>\r\n                    {\"\\n\"}{description}{\"\\n\"}\r\n                </Text>\r\n                {\r\n                    recipeItems.map((recipeItem, index) => {\r\n                        let ingredient = ingredients.find(ingredient => ingredient._id === recipeItem.ingredients)\r\n                        return (\r\n                            <Text key={index} style={styles.text}>\r\n                                {recipeItem.itemQuantity}\r\n                                {\" \"}{ingredient?.unitType}\r\n                                {\" \"}{ingredient?.name}\r\n                            </Text>\r\n                            );\r\n                    })\r\n                }\r\n            </View>\r\n            <Spacer />\r\n            <View>\r\n                <Button \r\n                    onPress={() => navigate(\"RecipeList\")} \r\n                    title={\"Edit\"}\r\n                />\r\n                <Spacer />\r\n                <Button \r\n                    onPress={() => navigate(\"RecipeList\")} \r\n                    title={\"Close\"}\r\n                />\r\n            </View>\r\n        </View>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nRecipeDetails.navigationOptions = {\r\n    header: () => false,\r\n  };\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: \"center\",\r\n    },\r\n    cardContainer: {\r\n        // backgroundColor: 'rgba(0,0,0,0.5)',\r\n        width: \"90%\",\r\n        backgroundColor: 'lightgrey',\r\n        borderRadius: 10,\r\n        alignItems: \"center\",\r\n    },\r\n    recipeImage: {\r\n        height: 160,\r\n        width: 400,\r\n        alignSelf: 'center',\r\n    },\r\n    text: {\r\n        fontSize: 16,\r\n        textAlign: \"center\",\r\n        color: \"#404040\",\r\n    },\r\n    header: {\r\n        fontSize: 24,\r\n        textAlign: \"center\",\r\n        color: \"#404040\",\r\n    },\r\n});\r\n\r\nexport default RecipeDetails;\r\n"]},"metadata":{},"sourceType":"module"}